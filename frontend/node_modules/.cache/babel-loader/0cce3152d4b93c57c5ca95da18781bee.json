{"ast":null,"code":"import _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Inbox.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport ChatInput from './ChatInput';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nrequire('../styles/Inbox.css');\n\nvar drawerWidth = 240;\nvar messages = [{\n  username: 'davematthews',\n  message: 'Hey how are you?',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Not bad, wanna jam?',\n  fromMe: false\n}, {\n  username: 'davematthews',\n  message: 'Sure, coming soon.',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Great, see you soon!',\n  fromMe: false\n}];\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      zIndex: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    },\n    toolbar: theme.mixins.toolbar\n  };\n};\n\nvar Inbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inbox, _Component);\n\n  function Inbox(props) {\n    var _this;\n\n    _classCallCheck(this, Inbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Inbox).call(this, props));\n    _this.state = {\n      messages: messages,\n      sendee: \"test1@test.com\"\n    };\n    _this.sendHandler = _this.sendHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newChat = _this.newChat.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Inbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"sendHandler\",\n    value: function sendHandler(message) {\n      console.log(message);\n    }\n  }, {\n    key: \"sendHandlerOld\",\n    value: function sendHandlerOld(message) {\n      this.addMessage({\n        username: this.props.username,\n        message: message,\n        fromMe: true\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(message) {\n      // Append the message to the component state\n      var messages = this.state.messages;\n      messages.push(message);\n      this.setState({\n        messages: messages\n      });\n    }\n  }, {\n    key: \"newChat\",\n    value: function newChat() {\n      console.log(\"new chat\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"permanent\",\n        classes: {\n          paper: \"drawerPaper\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        key: \"New\",\n        onClick: this.newChat,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(MailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"New\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, ['John Wick', 'Rick Astley', 'Dexter'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }));\n      }))), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Inbox\")), React.createElement(\"div\", {\n        className: \"container inbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        onSend: this.sendHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Inbox;\n}(Component);\n\nInbox.defaultProps = {\n  username: 'Anonymous'\n};\nInbox.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(Inbox));","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Inbox.js"],"names":["React","Component","Messages","ChatInput","Drawer","List","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Divider","CssBaseline","Paper","PropTypes","connect","withStyles","require","drawerWidth","messages","username","message","fromMe","styles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","unit","toolbar","mixins","Inbox","props","state","sendee","sendHandler","bind","newChat","auth","isAuthenticated","history","push","console","log","addMessage","setState","classes","paper","map","text","index","header","defaultProps","propTypes","object","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Messages from './Messages';\r\nimport ChatInput from './ChatInput';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nrequire('../styles/Inbox.css');\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst messages = [\r\n  {username: 'davematthews', message: 'Hey how are you?', fromMe: true},\r\n  {username: 'johnwick', message: 'Not bad, wanna jam?', fromMe: false},\r\n  {username: 'davematthews', message: 'Sure, coming soon.', fromMe: true},\r\n  {username: 'johnwick', message: 'Great, see you soon!', fromMe: false},\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n});\r\n\r\nclass Inbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { messages: messages, sendee: \"test1@test.com\" };\r\n    this.sendHandler = this.sendHandler.bind(this);\r\n    this.newChat = this.newChat.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n      if(!this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/');\r\n      }\r\n  }\r\n\r\n  sendHandler(message) {\r\n    console.log(message);\r\n  }\r\n\r\n  sendHandlerOld(message) {\r\n    this.addMessage({\r\n      username: this.props.username,\r\n      message: message,\r\n      fromMe: true\r\n    });\r\n  }\r\n\r\n  addMessage(message) {\r\n    // Append the message to the component state\r\n    const messages = this.state.messages;\r\n    messages.push(message);\r\n    this.setState({ messages });\r\n  }\r\n\r\n  newChat() {\r\n    console.log(\"new chat\");\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n      return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: \"drawerPaper\",\r\n          }}\r\n        >\r\n        <div className={classes.toolbar} />\r\n        <div className={classes.toolbar} />\r\n          <List>\r\n            <ListItem button key=\"New\" onClick={this.newChat}>\r\n              <ListItemIcon><MailIcon /></ListItemIcon>\r\n              <ListItemText primary='New' />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n          <List>\r\n            {['John Wick', 'Rick Astley', 'Dexter'].map((text, index) => (\r\n              <ListItem button key={text}>\r\n                <ListItemIcon><MailIcon /></ListItemIcon>\r\n                <ListItemText primary={text} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n              <h3>Inbox</h3>\r\n          </div>\r\n          <div className=\"container inbox-container\">\r\n          <Messages messages={messages} />\r\n          <ChatInput onSend={this.sendHandler} />\r\n        </div>\r\n      </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nInbox.defaultProps = {\r\n  username: 'Anonymous'\r\n};\r\n\r\nInbox.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {  })(withStyles(styles)(Inbox));\r\n"]},"metadata":{},"sourceType":"module"}