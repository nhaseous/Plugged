{"ast":null,"code":"import _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Inbox.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport ChatInput from './ChatInput';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\n\nrequire('../styles/Inbox.css');\n\nvar messages = [{\n  username: 'davematthews',\n  message: 'Hey how are you?',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Not bad, wanna jam?',\n  fromMe: false\n}, {\n  username: 'davematthews',\n  message: 'Sure, coming soon.',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Great, see you soon!',\n  fromMe: false\n}];\n\nvar Inbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inbox, _Component);\n\n  function Inbox(props) {\n    var _this;\n\n    _classCallCheck(this, Inbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Inbox).call(this, props));\n    _this.state = {\n      messages: messages\n    };\n    _this.sendHandler = _this.sendHandler.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Inbox, [{\n    key: \"sendHandler\",\n    value: function sendHandler(message) {\n      var messageObject = {\n        username: this.props.username,\n        message: message\n      };\n      messageObject.fromMe = true;\n      this.addMessage(messageObject);\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(message) {\n      // Append the message to the component state\n      var messages = this.state.messages;\n      messages.push(message);\n      this.setState({\n        messages: messages\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Inbox\")), React.createElement(\"div\", {\n        className: \"container inbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        className: \"drawer\",\n        variant: \"permanent\",\n        classes: {\n          paper: \"drawerPaper\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"toolbar\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, ['Inbox', 'Starred', 'Send email', 'Drafts'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(InboxIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }) : React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }));\n      })), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, ['All mail', 'Trash', 'Spam'].map(function (text, index) {\n        return React.createElement(ListItem, {\n          button: true,\n          key: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, index % 2 === 0 ? React.createElement(InboxIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }) : React.createElement(MailIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: text,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      }))), React.createElement(Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        onSend: this.sendHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Inbox;\n}(Component);\n\nInbox.defaultProps = {\n  username: 'Anonymous'\n};\nexport default Inbox;","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Inbox.js"],"names":["React","Component","Messages","ChatInput","Drawer","List","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Divider","require","messages","username","message","fromMe","Inbox","props","state","sendHandler","bind","messageObject","addMessage","push","setState","paper","map","text","index","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Messages from './Messages';\nimport ChatInput from './ChatInput';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\n\nrequire('../styles/Inbox.css');\n\nconst messages = [\n  {username: 'davematthews', message: 'Hey how are you?', fromMe: true},\n  {username: 'johnwick', message: 'Not bad, wanna jam?', fromMe: false},\n  {username: 'davematthews', message: 'Sure, coming soon.', fromMe: true},\n  {username: 'johnwick', message: 'Great, see you soon!', fromMe: false},\n]\n\nclass Inbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { messages: messages };\n    this.sendHandler = this.sendHandler.bind(this);\n  }\n\n  sendHandler(message) {\n    const messageObject = {\n      username: this.props.username,\n      message\n    };\n\n    messageObject.fromMe = true;\n    this.addMessage(messageObject);\n  }\n\n  addMessage(message) {\n    // Append the message to the component state\n    const messages = this.state.messages;\n    messages.push(message);\n    this.setState({ messages });\n  }\n\n  render() {\n      return (\n        <React.Fragment>\n          <div>\n              <h3>Inbox</h3>\n          </div>\n          <div className=\"container inbox-container\">\n          <Drawer\n            className=\"drawer\"\n            variant=\"permanent\"\n            classes={{\n              paper: \"drawerPaper\",\n            }}\n          >\n            <div className=\"toolbar\" />\n            <List>\n              {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n            <Divider />\n            <List>\n              {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                <ListItem button key={text}>\n                  <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                  <ListItemText primary={text} />\n                </ListItem>\n              ))}\n            </List>\n          </Drawer>\n            <Messages messages={messages} />\n            <ChatInput onSend={this.sendHandler} />\n          </div>\n        </React.Fragment>\n      );\n  }\n}\n\nInbox.defaultProps = {\n  username: 'Anonymous'\n};\n\nexport default Inbox;\n"]},"metadata":{},"sourceType":"module"}