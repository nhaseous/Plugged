{"ast":null,"code":"import _defineProperty from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/ProfileEdit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { editUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nvar ProfileEdit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ProfileEdit, _Component);\n\n  function ProfileEdit() {\n    var _this;\n\n    _classCallCheck(this, ProfileEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileEdit).call(this));\n    _this.state = {\n      name: '',\n      email: '',\n      password: '',\n      errors: {}\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProfileEdit, [{\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      var user = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password\n      };\n      this.props.editUser(user, this.props.history);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (!nextProps.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n\n      if (nextProps.errors) {\n        this.setState({\n          errors: nextProps.errors\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!this.props.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var errors = this.state.errors;\n      var _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        style: {\n          marginTop: '50px',\n          width: '700px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        style: {\n          marginBottom: '40px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Edit your profile\"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        className: classnames('form-control form-control-lg', {\n          'is-invalid': errors.name\n        }),\n        name: \"name\",\n        onChange: this.handleInputChange,\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), errors.name && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, errors.name)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        className: classnames('form-control form-control-lg', {\n          'is-invalid': errors.email\n        }),\n        name: \"email\",\n        onChange: this.handleInputChange,\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), errors.email && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, errors.email)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        className: classnames('form-control form-control-lg', {\n          'is-invalid': errors.password\n        }),\n        name: \"password\",\n        onChange: this.handleInputChange,\n        value: this.state.password,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), errors.password && React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, errors.password)), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return ProfileEdit;\n}(Component);\n\nProfileEdit.propTypes = {\n  editUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    errors: state.errors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  editUser: editUser\n})(withRouter(ProfileEdit));","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/ProfileEdit.js"],"names":["React","Component","connect","PropTypes","withRouter","editUser","classnames","ProfileEdit","state","name","email","password","errors","handleInputChange","bind","handleSubmit","e","setState","target","value","preventDefault","user","props","history","nextProps","auth","isAuthenticated","push","marginTop","width","marginBottom","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { editUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass ProfileEdit extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.editUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(!nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(!this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n\n    }\n\n    render() {\n        const { errors } = this.state;\n        const {isAuthenticated, user} = this.props.auth;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Edit your profile</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.name\n                    })}\n                    name=\"name\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.name }\n                    />\n                    {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nProfileEdit.propTypes = {\n    editUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ editUser })(withRouter(ProfileEdit))\n"]},"metadata":{},"sourceType":"module"}