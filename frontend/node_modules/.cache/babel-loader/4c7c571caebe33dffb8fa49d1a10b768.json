{"ast":null,"code":"import _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Friends.js\";\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getFriends } from '../actions/authentication';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Grid from '@material-ui/core/Grid';\nvar friends = [];\n\nvar styles = function styles(theme) {\n  return {};\n};\n\nvar Friends =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Friends, _Component);\n\n  function Friends(props) {\n    var _this;\n\n    _classCallCheck(this, Friends);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Friends).call(this, props));\n    _this.state = {\n      open: false,\n      email: ''\n    };\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.showFriends = _this.showFriends.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.pendingFriends = _this.pendingFriends.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFriend = _this.addFriend.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    _this.showFriends();\n\n    return _this;\n  }\n\n  _createClass(Friends, [{\n    key: \"showFriends\",\n    value: function showFriends() {\n      var _this2 = this;\n\n      axios.get('/api/users/me/friends').then(function (res) {\n        friends = res.data;\n\n        _this2.forceUpdate();\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState({\n        email: e.target.value\n      });\n    }\n  }, {\n    key: \"addFriend\",\n    value: function addFriend() {\n      axios.post('/api/users/me/friends/add', {\n        'email': this.state.email\n      }).then(function (res) {});\n    }\n  }, {\n    key: \"pendingFriends\",\n    value: function pendingFriends() {\n      var _this3 = this;\n\n      axios.get('/api/users/me/friends/pending').then(function (res) {\n        friends = res.data;\n\n        _this3.forceUpdate();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(Paper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(List, {\n        subheader: React.createElement(ListSubheader, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Friends\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.showFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(PeopleIcon, {\n        style: {\n          width: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(PersonAddIcon, {\n        style: {\n          width: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        onChange: this.handleInputChange,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Add Friend\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Enter the email address of the friend you want to add.\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.addFriend,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Add\"))), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        onClick: this.pendingFriends,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(NotificationsActiveIcon, {\n        style: {\n          width: 50\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      })), friends.map(function (_ref) {\n        var _id = _ref._id,\n            friend = _ref.friend;\n        return React.createElement(React.Fragment, {\n          key: _id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          container: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          item: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, React.createElement(ListItem, {\n          button: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          link: true,\n          src: friend.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }), React.createElement(ListItemText, {\n          primary: friend.name,\n          secondary: friend.email,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }))), React.createElement(Grid, {\n          item: true,\n          style: {\n            textAlign: \"middle\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"text\",\n          size: \"small\",\n          color: \"default\",\n          onClick: _this4.pendingFriends,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(RemoveCircleIcon, {\n          style: {\n            width: 25,\n            height: 25\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        })))), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144\n          },\n          __self: this\n        }));\n      }), React.createElement(ListItem, {\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(ListItemText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        link: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Show More\")))));\n    }\n  }]);\n\n  return Friends;\n}(Component);\n\nFriends.propTypes = {\n  getFriends: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getFriends: getFriends\n})(withStyles(styles)(Friends));","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Friends.js"],"names":["React","Component","Avatar","Typography","Button","Divider","List","ListItem","ListItemText","ListSubheader","Paper","PropTypes","withStyles","getFriends","connect","axios","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","PeopleIcon","PersonAddIcon","NotificationsActiveIcon","RemoveCircleIcon","Grid","friends","styles","theme","Friends","props","state","open","email","handleClickOpen","setState","handleClose","showFriends","bind","handleInputChange","pendingFriends","addFriend","get","then","res","data","forceUpdate","e","target","value","post","width","map","_id","friend","avatar","name","textAlign","height","propTypes","func","isRequired","auth","object","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,aAAP,MAA0B,+CAA1B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,uBAAP,MAAoC,wCAApC;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,IAAIC,OAAO,GAAG,EAAd;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK,EAAL;AAAA,CAApB;;IAIMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AADiB,UAWnBC,KAXmB,GAWX;AACNC,MAAAA,IAAI,EAAE,KADA;AAENC,MAAAA,KAAK,EAAE;AAFD,KAXW;;AAAA,UA4CnBC,eA5CmB,GA4CD,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KA9CkB;;AAAA,UAgDnBI,WAhDmB,GAgDL,YAAM;AAClB,YAAKD,QAAL,CAAc;AAAEH,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAlDkB;;AAGjB,UAAKK,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBD,IAAvB,uDAAzB;AACA,UAAKE,cAAL,GAAsB,MAAKA,cAAL,CAAoBF,IAApB,uDAAtB;AACA,UAAKG,SAAL,GAAiB,MAAKA,SAAL,CAAeH,IAAf,uDAAjB;;AAEA,UAAKD,WAAL;;AARiB;AASlB;;;;kCAOa;AAAA;;AACZvB,MAAAA,KAAK,CAAC4B,GAAN,CAAU,uBAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACXlB,QAAAA,OAAO,GAAGkB,GAAG,CAACC,IAAd;;AACA,QAAA,MAAI,CAACC,WAAL;AACD,OAJL;AAKD;;;sCAEiBC,C,EAAG;AACjB,WAAKZ,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEc,CAAC,CAACC,MAAF,CAASC;AADN,OAAd;AAGH;;;gCAEW;AACVnC,MAAAA,KAAK,CAACoC,IAAN,CAAW,2BAAX,EAAwC;AAAC,iBAAS,KAAKnB,KAAL,CAAWE;AAArB,OAAxC,EACKU,IADL,CACU,UAAAC,GAAG,EAAI,CACZ,CAFL;AAGD;;;qCAEgB;AAAA;;AACf9B,MAAAA,KAAK,CAAC4B,GAAN,CAAU,+BAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACXlB,QAAAA,OAAO,GAAGkB,GAAG,CAACC,IAAd;;AACA,QAAA,MAAI,CAACC,WAAL;AACD,OAJL;AAKD;;;6BAUQ;AAAA;;AACP,aACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAE,KAAKT,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACc,UAAAA,KAAK,EAAE;AAAR,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADA,EAIA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAE,KAAKjB,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAe,QAAA,KAAK,EAAE;AAACiB,UAAAA,KAAK,EAAE;AAAR,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJA,EAOA,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKI,WAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKG,iBAHjB;AAIE,2BAAgB,mBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAIE,oBAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAC,eAJR;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAPF,EAoBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKH,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKK,SAAtB;AAAiC,QAAA,KAAK,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CApBF,CAPA,EAoCA,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,SAAlC;AAA4C,QAAA,OAAO,EAAE,KAAKD,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,uBAAD;AAAyB,QAAA,KAAK,EAAE;AAACW,UAAAA,KAAK,EAAE;AAAR,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApCA,EAuCGzB,OAAO,CAAC0B,GAAR,CAAY;AAAA,YAAEC,GAAF,QAAEA,GAAF;AAAA,YAAOC,MAAP,QAAOA,MAAP;AAAA,eACX,oBAAC,KAAD,CAAO,QAAP;AAAgB,UAAA,GAAG,EAAED,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA,oBAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,IAAI,MAAZ;AAAa,UAAA,GAAG,EAAEC,MAAM,CAACC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,YAAD;AAAc,UAAA,OAAO,EAAED,MAAM,CAACE,IAA9B;AAAoC,UAAA,SAAS,EAAEF,MAAM,CAACrB,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CADF,CADF,EAOE,oBAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,KAAK,EAAE;AAACwB,YAAAA,SAAS,EAAE;AAAZ,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,MAAhB;AAAuB,UAAA,IAAI,EAAC,OAA5B;AAAoC,UAAA,KAAK,EAAC,SAA1C;AAAoD,UAAA,OAAO,EAAE,MAAI,CAACjB,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,gBAAD;AAAkB,UAAA,KAAK,EAAE;AAACW,YAAAA,KAAK,EAAE,EAAR;AAAYO,YAAAA,MAAM,EAAE;AAApB,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CAPF,CADA,EAcE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF,CADW;AAAA,OAAZ,CAvCH,EAyDE,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,IAAI,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF,CAzDF,CADF,CADF;AAmED;;;;EAzHmB1D,S;;AA4HtB6B,OAAO,CAAC8B,SAAR,GAAoB;AAChB/C,EAAAA,UAAU,EAAEF,SAAS,CAACkD,IAAV,CAAeC,UADX;AAEhBC,EAAAA,IAAI,EAAEpD,SAAS,CAACqD,MAAV,CAAiBF;AAFP,CAApB;;AAKA,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAAAjC,KAAK;AAAA,SAAK;AAC9B+B,IAAAA,IAAI,EAAE/B,KAAK,CAAC+B;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAejD,OAAO,CAACmD,eAAD,EAAkB;AAAEpD,EAAAA,UAAU,EAAVA;AAAF,CAAlB,CAAP,CAAyCD,UAAU,CAACgB,MAAD,CAAV,CAAmBE,OAAnB,CAAzC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button/Button';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport { getFriends } from '../actions/authentication';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PeopleIcon from '@material-ui/icons/People';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport Grid from '@material-ui/core/Grid';\n\nvar friends = [];\n\nconst styles = theme => ({\n\n});\n\nclass Friends extends Component {\n  constructor(props) {\n    super(props);\n\n    this.showFriends = this.showFriends.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.pendingFriends = this.pendingFriends.bind(this);\n    this.addFriend = this.addFriend.bind(this);\n\n    this.showFriends();\n  }\n\n  state = {\n    open: false,\n    email: ''\n  };\n\n  showFriends() {\n    axios.get('/api/users/me/friends')\n        .then(res => {\n          friends = res.data;\n          this.forceUpdate();\n        })\n  }\n\n  handleInputChange(e) {\n      this.setState({\n          email: e.target.value\n      })\n  }\n\n  addFriend() {\n    axios.post('/api/users/me/friends/add', {'email': this.state.email})\n        .then(res => {\n        })\n  }\n\n  pendingFriends() {\n    axios.get('/api/users/me/friends/pending')\n        .then(res => {\n          friends = res.data;\n          this.forceUpdate();\n        })\n  }\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    return (\n      <Paper>\n        <List subheader={<ListSubheader>Friends</ListSubheader>}>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.showFriends}>\n          <PeopleIcon style={{width: 50}}/>\n        </Button>\n        <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>\n          <PersonAddIcon style={{width: 50}}/>\n        </Button>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          onChange={this.handleInputChange}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Add Friend</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Enter the email address of the friend you want to add.\n            </DialogContentText>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={this.addFriend} color=\"primary\">\n              Add\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <Button variant=\"contained\" color=\"default\" onClick={this.pendingFriends}>\n          <NotificationsActiveIcon style={{width: 50}}/>\n        </Button>\n          {friends.map(({_id, friend }) => (\n            <React.Fragment key={_id}>\n            <Grid container>\n              <Grid item>\n                <ListItem button>\n                  <Avatar link src={friend.avatar} />\n                  <ListItemText primary={friend.name} secondary={friend.email} />\n                </ListItem>\n              </Grid>\n              <Grid item style={{textAlign: \"middle\"}}>\n                <Button variant=\"text\" size=\"small\" color=\"default\" onClick={this.pendingFriends}>\n                  <RemoveCircleIcon style={{width: 25, height: 25}}/>\n                </Button>\n              </Grid>\n            </Grid>\n              <Divider />\n            </React.Fragment>\n          ))}\n          <ListItem button>\n            <ListItemText>\n              <Typography link>Show More</Typography>\n            </ListItemText>\n          </ListItem>\n        </List>\n      </Paper>\n    );\n  };\n}\n\nFriends.propTypes = {\n    getFriends: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n});\n\nexport default connect(mapStateToProps, { getFriends })(withStyles(styles)(Friends));\n"]},"metadata":{},"sourceType":"module"}