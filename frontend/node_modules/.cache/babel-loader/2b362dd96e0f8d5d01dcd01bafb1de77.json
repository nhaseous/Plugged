{"ast":null,"code":"import _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Inbox.js\";\nimport React, { Component } from 'react';\nimport Messages from './Messages';\nimport ChatInput from './ChatInput';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport Divider from '@material-ui/core/Divider';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button/Button';\nimport Avatar from '@material-ui/core/Avatar';\n\nrequire('../styles/Inbox.css');\n\nvar drawerWidth = 240;\nvar messages = [{\n  username: 'davematthews',\n  message: 'Hey how are you?',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Not bad, wanna jam?',\n  fromMe: false\n}, {\n  username: 'davematthews',\n  message: 'Sure, coming soon.',\n  fromMe: true\n}, {\n  username: 'johnwick',\n  message: 'Great, see you soon!',\n  fromMe: false\n}];\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: \"flex\"\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1\n    },\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0,\n      zIndex: 0\n    },\n    drawerPaper: {\n      width: drawerWidth\n    },\n    content: {\n      flexGrow: 1,\n      padding: theme.spacing.unit * 3\n    },\n    toolbar: theme.mixins.toolbar\n  };\n};\n\nvar friends = [];\n\nvar Inbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Inbox, _Component);\n\n  function Inbox(props) {\n    var _this;\n\n    _classCallCheck(this, Inbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Inbox).call(this, props));\n\n    _this.handleClickOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      messages: messages,\n      me: {\n        id: '',\n        name: '',\n        avatar: ''\n      },\n      current: {\n        id: '',\n        email: ''\n      },\n      open: false\n    };\n    _this.sendHandler = _this.sendHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.newChat = _this.newChat.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Inbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!this.props.auth.isAuthenticated) {\n        this.props.history.push('/');\n      }\n\n      axios.get('/api/users/me').then(function (res) {\n        _this2.setState({\n          me: {\n            id: res.data.id,\n            name: res.data.name,\n            avatar: res.data.avatar\n          }\n        });\n      });\n      axios.get('/api/users/me/messages').then(function (res) {\n        console.log(res.data.messages);\n        var newFriends = res.data.messages.map(function (element) {\n          axios.get(\"/api/users/\".concat(element._id)).then(function (response) {\n            console.log(response);\n            return {\n              id: response.id,\n              name: response.name,\n              avatar: response.avatar\n            };\n          });\n        });\n        friends = newFriends;\n        console.log(friends);\n\n        _this2.forceUpdate();\n      });\n      axios.post('/api/messages/get', {\n        email: this.state.current.email\n      }).then(function (res) {\n        console.log(res.data);\n      });\n    }\n  }, {\n    key: \"sendHandler\",\n    value: function sendHandler(message) {\n      axios.post('/api/messages/add', {\n        message: message,\n        id: this.state.current.id\n      }).then(function (res) {\n        console.log(res.data);\n      });\n    }\n  }, {\n    key: \"addMessage\",\n    value: function addMessage(message) {\n      // Append the message to the component state\n      var messages = this.state.messages;\n      messages.push(message);\n      this.setState({\n        messages: messages\n      });\n    }\n  }, {\n    key: \"newChat\",\n    value: function newChat() {\n      axios.post('/api/messages/add/user', {\n        email: this.state.current.email\n      }).then(function (res) {\n        console.log(res.data);\n      });\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      this.setState({\n        current: {\n          email: e.target.value\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(Drawer, {\n        className: classes.drawer,\n        variant: \"permanent\",\n        classes: {\n          paper: \"drawerPaper\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.toolbar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        button: true,\n        key: \"New\",\n        onClick: this.handleClickOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(MailIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"New\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(Divider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      })), React.createElement(Paper, {\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.header,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Inbox\")), React.createElement(\"div\", {\n        className: \"container inbox-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(Messages, {\n        messages: messages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }), React.createElement(ChatInput, {\n        onSend: this.sendHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }), React.createElement(Dialog, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        onChange: this.handleInputChange,\n        \"aria-labelledby\": \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"form-dialog-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"Enter email\"), React.createElement(DialogContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, React.createElement(DialogContentText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"What's the email of the person you want to connect to?\"), React.createElement(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"name\",\n        label: \"Email Address\",\n        type: \"email\",\n        fullWidth: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(DialogActions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleClose,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        onClick: this.newChat,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Add\"))))));\n    }\n  }]);\n\n  return Inbox;\n}(Component);\n\nInbox.defaultProps = {\n  username: 'Anonymous'\n};\nInbox.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {})(withStyles(styles)(Inbox));","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Inbox.js"],"names":["React","Component","Messages","ChatInput","Drawer","List","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","Divider","CssBaseline","Paper","PropTypes","connect","withStyles","axios","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Button","Avatar","require","drawerWidth","messages","username","message","fromMe","styles","theme","root","display","appBar","zIndex","drawer","width","flexShrink","drawerPaper","content","flexGrow","padding","spacing","unit","toolbar","mixins","friends","Inbox","props","handleClickOpen","setState","open","handleClose","state","me","id","name","avatar","current","email","sendHandler","bind","newChat","handleInputChange","auth","isAuthenticated","history","push","get","then","res","data","console","log","newFriends","map","element","_id","response","forceUpdate","post","e","target","value","classes","paper","header","defaultProps","propTypes","object","isRequired","mapStateToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,SAAP,MAAsB,gCAAtB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEAC,OAAO,CAAC,qBAAD,CAAP;;AAEA,IAAMC,WAAW,GAAG,GAApB;AAEA,IAAMC,QAAQ,GAAG,CACf;AAACC,EAAAA,QAAQ,EAAE,cAAX;AAA2BC,EAAAA,OAAO,EAAE,kBAApC;AAAwDC,EAAAA,MAAM,EAAE;AAAhE,CADe,EAEf;AAACF,EAAAA,QAAQ,EAAE,UAAX;AAAuBC,EAAAA,OAAO,EAAE,qBAAhC;AAAuDC,EAAAA,MAAM,EAAE;AAA/D,CAFe,EAGf;AAACF,EAAAA,QAAQ,EAAE,cAAX;AAA2BC,EAAAA,OAAO,EAAE,oBAApC;AAA0DC,EAAAA,MAAM,EAAE;AAAlE,CAHe,EAIf;AAACF,EAAAA,QAAQ,EAAE,UAAX;AAAuBC,EAAAA,OAAO,EAAE,sBAAhC;AAAwDC,EAAAA,MAAM,EAAE;AAAhE,CAJe,CAAjB;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAE;AADL,KADiB;AAIvBC,IAAAA,MAAM,EAAE;AACNC,MAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,CAAaC,MAAb,GAAsB;AADxB,KAJe;AAOvBA,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEZ,WADD;AAENa,MAAAA,UAAU,EAAE,CAFN;AAGNH,MAAAA,MAAM,EAAE;AAHF,KAPe;AAYvBI,IAAAA,WAAW,EAAE;AACXF,MAAAA,KAAK,EAAEZ;AADI,KAZU;AAevBe,IAAAA,OAAO,EAAE;AACPC,MAAAA,QAAQ,EAAE,CADH;AAEPC,MAAAA,OAAO,EAAEX,KAAK,CAACY,OAAN,CAAcC,IAAd,GAAqB;AAFvB,KAfc;AAmBvBC,IAAAA,OAAO,EAAEd,KAAK,CAACe,MAAN,CAAaD;AAnBC,GAAL;AAAA,CAApB;;AAsBA,IAAIE,OAAO,GAAG,EAAd;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAoEnBC,eApEmB,GAoED,YAAM;AACtB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAtEkB;;AAAA,UAwEnBC,WAxEmB,GAwEL,YAAM;AAClB,YAAKF,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KA1EkB;;AAEjB,UAAKE,KAAL,GAAa;AACX5B,MAAAA,QAAQ,EAAEA,QADC;AAEX6B,MAAAA,EAAE,EAAE;AAACC,QAAAA,EAAE,EAAE,EAAL;AAASC,QAAAA,IAAI,EAAE,EAAf;AAAmBC,QAAAA,MAAM,EAAE;AAA3B,OAFO;AAGXC,MAAAA,OAAO,EAAE;AAACH,QAAAA,EAAE,EAAE,EAAL;AAASI,QAAAA,KAAK,EAAE;AAAhB,OAHE;AAIXR,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMA,UAAKS,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AACA,UAAKC,OAAL,GAAe,MAAKA,OAAL,CAAaD,IAAb,uDAAf;AACA,UAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,uDAAzB;AAViB;AAWlB;;;;wCAEmB;AAAA;;AAChB,UAAG,CAAC,KAAKb,KAAL,CAAWgB,IAAX,CAAgBC,eAApB,EAAqC;AACjC,aAAKjB,KAAL,CAAWkB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACH;;AACDrD,MAAAA,KAAK,CAACsD,GAAN,CAAU,eAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACX,QAAA,MAAI,CAACpB,QAAL,CAAc;AACZI,UAAAA,EAAE,EAAE;AACFC,YAAAA,EAAE,EAAEe,GAAG,CAACC,IAAJ,CAAShB,EADX;AAEFC,YAAAA,IAAI,EAAEc,GAAG,CAACC,IAAJ,CAASf,IAFb;AAGFC,YAAAA,MAAM,EAAEa,GAAG,CAACC,IAAJ,CAASd;AAHf;AADQ,SAAd;AAOD,OATL;AAUA3C,MAAAA,KAAK,CAACsD,GAAN,CAAU,wBAAV,EACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAJ,CAAS9C,QAArB;AACA,YAAIiD,UAAU,GAAIJ,GAAG,CAACC,IAAJ,CAAS9C,QAAV,CAAoBkD,GAApB,CAAwB,UAAUC,OAAV,EAAmB;AAC1D9D,UAAAA,KAAK,CAACsD,GAAN,sBAAwBQ,OAAO,CAACC,GAAhC,GACGR,IADH,CACQ,UAAAS,QAAQ,EAAI;AAChBN,YAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACA,mBAAO;AAACvB,cAAAA,EAAE,EAAEuB,QAAQ,CAACvB,EAAd;AAAkBC,cAAAA,IAAI,EAAEsB,QAAQ,CAACtB,IAAjC;AAAuCC,cAAAA,MAAM,EAAEqB,QAAQ,CAACrB;AAAxD,aAAP;AACD,WAJH;AAKD,SANgB,CAAjB;AAOAX,QAAAA,OAAO,GAAG4B,UAAV;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAY3B,OAAZ;;AACA,QAAA,MAAI,CAACiC,WAAL;AACD,OAbL;AAcAjE,MAAAA,KAAK,CAACkE,IAAN,CAAW,mBAAX,EAAgC;AAACrB,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWK,OAAX,CAAmBC;AAA3B,OAAhC,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,OAHL;AAIH;;;gCAEW5C,O,EAAS;AACnBb,MAAAA,KAAK,CAACkE,IAAN,CAAW,mBAAX,EAAgC;AAACrD,QAAAA,OAAO,EAAEA,OAAV;AAAmB4B,QAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWK,OAAX,CAAmBH;AAA1C,OAAhC,EACKc,IADL,CACU,UAAAC,GAAG,EAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,OAHL;AAID;;;+BAEU5C,O,EAAS;AAClB;AACA,UAAMF,QAAQ,GAAG,KAAK4B,KAAL,CAAW5B,QAA5B;AACAA,MAAAA,QAAQ,CAAC0C,IAAT,CAAcxC,OAAd;AACA,WAAKuB,QAAL,CAAc;AAAEzB,QAAAA,QAAQ,EAARA;AAAF,OAAd;AACD;;;8BAES;AACRX,MAAAA,KAAK,CAACkE,IAAN,CAAW,wBAAX,EAAqC;AAACrB,QAAAA,KAAK,EAAE,KAAKN,KAAL,CAAWK,OAAX,CAAmBC;AAA3B,OAArC,EACKU,IADL,CACU,UAAAC,GAAG,EAAI;AACXE,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,OAHL;AAID;;;sCAUiBU,C,EAAG;AACjB,WAAK/B,QAAL,CAAc;AACVQ,QAAAA,OAAO,EAAE;AAACC,UAAAA,KAAK,EAAEsB,CAAC,CAACC,MAAF,CAASC;AAAjB;AADC,OAAd;AAGH;;;6BAEQ;AAAA,UACCC,OADD,GACa,KAAKpC,KADlB,CACCoC,OADD;AAEL,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,MAAD;AACE,QAAA,SAAS,EAAEA,OAAO,CAACjD,MADrB;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,OAAO,EAAE;AACPkD,UAAAA,KAAK,EAAE;AADA,SAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOA;AAAK,QAAA,SAAS,EAAED,OAAO,CAACxC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,EAQA;AAAK,QAAA,SAAS,EAAEwC,OAAO,CAACxC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,EASE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAU,QAAA,MAAM,MAAhB;AAAiB,QAAA,GAAG,EAAC,KAArB;AAA2B,QAAA,OAAO,EAAE,KAAKK,eAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAc,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd,CADF,EAEE,oBAAC,YAAD;AAAc,QAAA,OAAO,EAAC,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CATF,EAeE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,CAFA,EAoBA,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAEmC,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACE,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE7D,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,SAAD;AAAW,QAAA,MAAM,EAAE,KAAKmC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,EAGA,oBAAC,MAAD;AACE,QAAA,IAAI,EAAE,KAAKP,KAAL,CAAWF,IADnB;AAEE,QAAA,OAAO,EAAE,KAAKC,WAFhB;AAGE,QAAA,QAAQ,EAAE,KAAKW,iBAHjB;AAIE,2BAAgB,mBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,WAAD;AAAa,QAAA,EAAE,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEADF,EAIE,oBAAC,SAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,MAAM,EAAC,OAFT;AAGE,QAAA,EAAE,EAAC,MAHL;AAIE,QAAA,KAAK,EAAC,eAJR;AAKE,QAAA,IAAI,EAAC,OALP;AAME,QAAA,SAAS,MANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAPF,EAoBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKX,WAAtB;AAAmC,QAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAIE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKU,OAAtB;AAA+B,QAAA,KAAK,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,CApBF,CAHA,CAJF,CApBA,CADF;AA6DH;;;;EAlJiBhE,S;;AAqJpBiD,KAAK,CAACwC,YAAN,GAAqB;AACnB7D,EAAAA,QAAQ,EAAE;AADS,CAArB;AAIAqB,KAAK,CAACyC,SAAN,GAAkB;AACdxB,EAAAA,IAAI,EAAErD,SAAS,CAAC8E,MAAV,CAAiBC;AADT,CAAlB;;AAIA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAtC,KAAK;AAAA,SAAK;AAC9BW,IAAAA,IAAI,EAAEX,KAAK,CAACW;AADkB,GAAL;AAAA,CAA7B;;AAIA,eAAepD,OAAO,CAAC+E,eAAD,EAAkB,EAAlB,CAAP,CAA+B9E,UAAU,CAACgB,MAAD,CAAV,CAAmBkB,KAAnB,CAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Messages from './Messages';\r\nimport ChatInput from './ChatInput';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nrequire('../styles/Inbox.css');\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst messages = [\r\n  {username: 'davematthews', message: 'Hey how are you?', fromMe: true},\r\n  {username: 'johnwick', message: 'Not bad, wanna jam?', fromMe: false},\r\n  {username: 'davematthews', message: 'Sure, coming soon.', fromMe: true},\r\n  {username: 'johnwick', message: 'Great, see you soon!', fromMe: false},\r\n]\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    zIndex: 0\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3\r\n  },\r\n  toolbar: theme.mixins.toolbar\r\n});\r\n\r\nvar friends = [];\r\n\r\nclass Inbox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: messages,\r\n      me: {id: '', name: '', avatar: ''},\r\n      current: {id: '', email: ''},\r\n      open: false\r\n    };\r\n    this.sendHandler = this.sendHandler.bind(this);\r\n    this.newChat = this.newChat.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n      if(!this.props.auth.isAuthenticated) {\r\n          this.props.history.push('/');\r\n      }\r\n      axios.get('/api/users/me')\r\n          .then(res => {\r\n            this.setState({\r\n              me: {\r\n                id: res.data.id,\r\n                name: res.data.name,\r\n                avatar: res.data.avatar\r\n              }\r\n            });\r\n          });\r\n      axios.get('/api/users/me/messages')\r\n          .then(res => {\r\n            console.log(res.data.messages);\r\n            let newFriends = (res.data.messages).map(function (element) {\r\n              axios.get(`/api/users/${element._id}`)\r\n                .then(response => {\r\n                  console.log(response);\r\n                  return {id: response.id, name: response.name, avatar: response.avatar};\r\n                })\r\n            });\r\n            friends = newFriends;\r\n            console.log(friends);\r\n            this.forceUpdate();\r\n          });\r\n      axios.post('/api/messages/get', {email: this.state.current.email})\r\n          .then(res => {\r\n            console.log(res.data);\r\n          });\r\n  }\r\n\r\n  sendHandler(message) {\r\n    axios.post('/api/messages/add', {message: message, id: this.state.current.id})\r\n        .then(res => {\r\n          console.log(res.data);\r\n        })\r\n  }\r\n\r\n  addMessage(message) {\r\n    // Append the message to the component state\r\n    const messages = this.state.messages;\r\n    messages.push(message);\r\n    this.setState({ messages });\r\n  }\r\n\r\n  newChat() {\r\n    axios.post('/api/messages/add/user', {email: this.state.current.email})\r\n        .then(res => {\r\n          console.log(res.data);\r\n        })\r\n  }\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  handleInputChange(e) {\r\n      this.setState({\r\n          current: {email: e.target.value}\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n      return (\r\n        <React.Fragment>\r\n        <CssBaseline />\r\n        <Drawer\r\n          className={classes.drawer}\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: \"drawerPaper\",\r\n          }}\r\n        >\r\n        <div className={classes.toolbar} />\r\n        <div className={classes.toolbar} />\r\n          <List>\r\n            <ListItem button key=\"New\" onClick={this.handleClickOpen}>\r\n              <ListItemIcon><MailIcon /></ListItemIcon>\r\n              <ListItemText primary='New' />\r\n            </ListItem>\r\n          </List>\r\n          <Divider />\r\n\r\n        </Drawer>\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n              <h3>Inbox</h3>\r\n          </div>\r\n          <div className=\"container inbox-container\">\r\n          <Messages messages={messages} />\r\n          <ChatInput onSend={this.sendHandler} />\r\n          <Dialog\r\n            open={this.state.open}\r\n            onClose={this.handleClose}\r\n            onChange={this.handleInputChange}\r\n            aria-labelledby=\"form-dialog-title\"\r\n          >\r\n            <DialogTitle id=\"form-dialog-title\">Enter email</DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText>\r\n                What's the email of the person you want to connect to?\r\n              </DialogContentText>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"name\"\r\n                label=\"Email Address\"\r\n                type=\"email\"\r\n                fullWidth\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.newChat} color=\"primary\">\r\n                Add\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </Paper>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nInbox.defaultProps = {\r\n  username: 'Anonymous'\r\n};\r\n\r\nInbox.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n});\r\n\r\nexport default connect(mapStateToProps, {  })(withStyles(styles)(Inbox));\r\n"]},"metadata":{},"sourceType":"module"}