{"ast":null,"code":"var _jsxFileName = \"/Users/nha/Plugged/frontend/src/containers/PostList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Post from '../components/Post';\nimport { deletePost } from '../actions';\nimport axios from 'axios';\n\nfunction PostList(_ref) {\n  var posts = _ref.posts,\n      onDelete = _ref.onDelete;\n\n  if (!posts.length) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, \"No Posts\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, posts.map(function (post) {\n    var user = {\n      name: '',\n      avatar: ''\n    };\n    axios.get(\"/api/users/\".concat(post.sender)).then(function (res) {\n      user = {\n        name: res.data.name,\n        avatar: res.data.avatar\n      };\n      return React.createElement(Post, {\n        user: user,\n        post: post,\n        onDelete: onDelete,\n        key: post._id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      });\n    });\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    posts: state.posts\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onDelete: function onDelete(id) {\n      dispatch(deletePost(id));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/containers/PostList.js"],"names":["React","connect","Post","deletePost","axios","PostList","posts","onDelete","length","map","post","user","name","avatar","get","sender","then","res","data","_id","mapStateToProps","state","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,OAAuC;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AACrC,MAAG,CAACD,KAAK,CAACE,MAAV,EAAkB;AAChB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,GAAN,CAAU,UAAAC,IAAI,EAAI;AACjB,QAAIC,IAAI,GAAG;AAACC,MAAAA,IAAI,EAAC,EAAN;AAAUC,MAAAA,MAAM,EAAE;AAAlB,KAAX;AACAT,IAAAA,KAAK,CAACU,GAAN,sBAAwBJ,IAAI,CAACK,MAA7B,GACKC,IADL,CACU,UAAAC,GAAG,EAAI;AACXN,MAAAA,IAAI,GAAG;AAACC,QAAAA,IAAI,EAAEK,GAAG,CAACC,IAAJ,CAASN,IAAhB;AAAsBC,QAAAA,MAAM,EAAEI,GAAG,CAACC,IAAJ,CAASL;AAAvC,OAAP;AACA,aACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAGF,IAAb;AAAoB,QAAA,IAAI,EAAGD,IAA3B;AAAkC,QAAA,QAAQ,EAAGH,QAA7C;AAAwD,QAAA,GAAG,EAAGG,IAAI,CAACS,GAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KANL;AAOD,GATA,CADH,CADF;AAcD;;AAED,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AACLf,IAAAA,KAAK,EAAEe,KAAK,CAACf;AADR,GAAP;AAGD,CAJD;;AAMA,IAAMgB,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLhB,IAAAA,QAAQ,EAAE,kBAAAiB,EAAE,EAAI;AACdD,MAAAA,QAAQ,CAACpB,UAAU,CAACqB,EAAD,CAAX,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAevB,OAAO,CACpBmB,eADoB,EAEpBE,kBAFoB,CAAP,CAGbjB,QAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport Post from '../components/Post';\nimport { deletePost } from '../actions';\nimport axios from 'axios';\n\nfunction PostList({ posts, onDelete }) {\n  if(!posts.length) {\n    return (\n      <div>\n        No Posts\n      </div>\n    )\n  }\n  return (\n    <div>\n      {posts.map(post => {\n        let user = {name:'', avatar: ''};\n        axios.get(`/api/users/${post.sender}`)\n            .then(res => {\n              user = {name: res.data.name, avatar: res.data.avatar};\n              return (\n                <Post user={ user } post={ post } onDelete={ onDelete } key={ post._id } />\n              );\n            });\n      })}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    posts: state.posts\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onDelete: id => {\n      dispatch(deletePost(id));\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PostList);\n"]},"metadata":{},"sourceType":"module"}