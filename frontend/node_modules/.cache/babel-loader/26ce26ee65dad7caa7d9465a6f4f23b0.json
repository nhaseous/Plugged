{"ast":null,"code":"import _classCallCheck from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/Users/nha/Plugged/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Posts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport axios from 'axios';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3,\n      overflowX: 'auto'\n    },\n    table: {\n      maxWidth: 2500,\n      backgroundColor: 'gray'\n    },\n    cell: {\n      display: 'flex',\n      justifyContent: 'space-evenly'\n    }\n  };\n};\n\nvar id = 0;\n\nvar createData = function createData(el) {\n  id += 1;\n  return _objectSpread({\n    id: id\n  }, el);\n};\n\nvar SimpleTable =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SimpleTable, _Component);\n\n  function SimpleTable(props) {\n    var _this;\n\n    _classCallCheck(this, SimpleTable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SimpleTable).call(this, props));\n    console.log(props);\n    _this.state = {\n      me: {\n        avatar: ''\n      },\n      posts: [{\n        body: '',\n        date: ''\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(SimpleTable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get('api/posts/me').then(function (res) {\n        console.log(res.data);\n\n        _this2.setState({\n          me: {\n            avatar: res.data.user.avatar\n          },\n          posts: res.data.posts.map(function (element) {\n            return element;\n          })\n        });\n\n        console.log(_this2.props.rows);\n        console.log(_this2.state.posts);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var data = this.state.posts.map(function (el) {\n        return createData({\n          body: el.body,\n          date: el.date\n        });\n      });\n\n      var sent = function sent(date) {\n        var diff = Date.now() - new Date(date);\n      };\n\n      console.log(data);\n      return React.createElement(Paper, {\n        className: this.props.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: this.props.table,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Posts\"))), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, data.map(function (row) {\n        return React.createElement(TableRow, {\n          key: row.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          className: _this3.props.cell,\n          component: \"th\",\n          scope: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          display: \"inline-flex\",\n          \"flex-direction\": \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(Avatar, {\n          alt: \"User pic\",\n          src: _this3.state.me.avatar,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }), React.createElement(Typography, {\n          variant: \"caption\",\n          \"align-self\": \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Time\")), React.createElement(Typography, {\n          variant: \"body1\",\n          \"align-self\": \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \" \", row.body, \" \")));\n      }))));\n    }\n  }]);\n\n  return SimpleTable;\n}(Component);\n\nSimpleTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(SimpleTable);","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Posts.js"],"names":["React","Component","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TableRow","Paper","Avatar","Typography","axios","styles","theme","root","width","marginTop","spacing","unit","overflowX","table","maxWidth","backgroundColor","cell","display","justifyContent","id","createData","el","SimpleTable","props","console","log","state","me","avatar","posts","body","date","get","then","res","data","setState","user","map","element","rows","sent","diff","Date","now","row","propTypes","classes","object","isRequired"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport axios from 'axios';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        width: '100%',\r\n        marginTop: theme.spacing.unit * 3,\r\n        overflowX: 'auto',\r\n    },\r\n    table: {\r\n        maxWidth: 2500,\r\n        backgroundColor: 'gray'\r\n    },\r\n    cell: {\r\n        display: 'flex',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n});\r\n\r\nlet id = 0;\r\nlet createData = el => {\r\n    id += 1;\r\n    return { id, ...el };\r\n};\r\n\r\nclass SimpleTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n          me: {avatar: ''},\r\n          posts: [{body: '', date: ''}]\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      axios.get('api/posts/me').then(res => {\r\n        console.log(res.data);\r\n        this.setState({\r\n          me: {avatar: res.data.user.avatar},\r\n          posts: (res.data.posts).map(function(element) {\r\n            return element;\r\n          })});\r\n        console.log(this.props.rows);\r\n        console.log(this.state.posts);\r\n        });\r\n      };\r\n\r\n    render() {\r\n        const data = this.state.posts.map(el => createData({body: el.body, date: el.date}));\r\n        const sent = date => {\r\n            let diff = Date.now() - new Date(date);\r\n        };\r\n\r\n        console.log(data);\r\n\r\n        return (\r\n            <Paper className={this.props.root}>\r\n                <Table className={this.props.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align=\"center\">Posts</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {data.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell className={this.props.cell} component=\"th\" scope=\"row\">\r\n                                    <div display=\"inline-flex\" flex-direction=\"row\">\r\n                                        <Avatar alt=\"User pic\" src={this.state.me.avatar}/>\r\n                                        <Typography variant=\"caption\" align-self=\"right\">Time</Typography>\r\n                                    </div>\r\n                                    <Typography variant=\"body1\" align-self=\"center\"> {row.body} </Typography>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleTable.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(SimpleTable);\r\n"]},"metadata":{},"sourceType":"module"}