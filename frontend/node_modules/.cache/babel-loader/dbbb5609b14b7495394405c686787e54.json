{"ast":null,"code":"var _jsxFileName = \"/Users/nha/Plugged/frontend/src/components/Event.js\";\nimport React from 'react';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\nexport default (function (_ref) {\n  var avatar = _ref.user.avatar,\n      _ref$event = _ref.event,\n      name = _ref$event.name,\n      dates = _ref$event.dates,\n      _embedded = _ref$event._embedded,\n      id = _ref$event.id,\n      addEvent = _ref.addEvent,\n      clearEvent = _ref.clearEvent,\n      status = _ref.status;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"#\",\n    className: \"list-group-item\",\n    style: {\n      color: \"#555\",\n      padding: \"10px 10px\",\n      textDecoration: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"list-group-item-heading\",\n    style: {\n      color: \"black\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, name), React.createElement(\"p\", {\n    className: \"list-group-item-text\",\n    style: {\n      marginBottom: \"0px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, dates.start.localDate), React.createElement(\"p\", {\n    className: \"venue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, _embedded.venues[0].name, \" in \", _embedded.venues[0].city.name)), React.createElement(ExpansionPanel, {\n    style: {\n      marginTop: 0,\n      border: \"none\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(ExpansionPanelSummary, {\n    expandIcon: React.createElement(ExpandMoreIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, status ? React.createElement(Chip, {\n    avatar: React.createElement(Avatar, {\n      alt: \"me\",\n      src: avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }),\n    label: status ? \"I'm \".concat(status.status) : '',\n    onDelete: function onDelete() {\n      return clearEvent(id);\n    },\n    className: \"chip\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }) : '')), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(ExpansionPanelActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    disabled: status ? status.status === 'going' : false,\n    onClick: function onClick() {\n      return addEvent({\n        event: {\n          name: name,\n          date: dates.start.localDate,\n          venue: _embedded.venues[0].name,\n          id: id\n        },\n        status: 'going'\n      });\n    },\n    style: {\n      marginRight: \"auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"I'm going\"), React.createElement(Button, {\n    size: \"small\",\n    disabled: status ? status.status === 'interested' : false,\n    onClick: function onClick() {\n      return addEvent({\n        event: {\n          name: name,\n          date: dates.start.localDate,\n          venue: _embedded.venues[0].name,\n          id: id\n        },\n        status: 'interested'\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Interested\"))));\n});","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/components/Event.js"],"names":["React","ExpansionPanel","ExpansionPanelSummary","Button","Divider","ExpansionPanelActions","ExpandMoreIcon","Chip","Avatar","avatar","user","event","name","dates","_embedded","id","addEvent","clearEvent","status","color","padding","textDecoration","marginBottom","start","localDate","venues","city","marginTop","border","date","venue","marginRight"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport Chip from '@material-ui/core/Chip';\nimport Avatar from '@material-ui/core/Avatar';\n\nexport default ({user: { avatar }, event: { name, dates, _embedded, id }, addEvent, clearEvent, status }) => {\n  return (\n    <div>\n      <a href=\"#\" className=\"list-group-item\" style={{color: \"#555\", padding: \"10px 10px\", textDecoration: \"none\"}}>\n        <h4 className=\"list-group-item-heading\" style={{color: \"black\"}}>{name}</h4>\n        <p className=\"list-group-item-text\" style={{marginBottom: \"0px\"}}>{dates.start.localDate}</p>\n        <p className=\"venue\">{_embedded.venues[0].name} in {_embedded.venues[0].city.name}</p>\n      </a>\n      <ExpansionPanel style={{marginTop: 0, border: \"none\"}}>\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n        <div className=\"column\">\n          { status ?\n            <Chip\n            avatar={<Avatar alt=\"me\" src={avatar} />}\n            label={status ? `I'm ${status.status}` : ''}\n            onDelete={() => clearEvent(id)}\n            className=\"chip\"\n            variant=\"outlined\"\n            /> : ''\n          }\n        </div>\n        </ExpansionPanelSummary>\n\n        <Divider />\n        <ExpansionPanelActions>\n          <Button size=\"small\" color=\"primary\" disabled={ status ? (status.status === 'going') : false } onClick={() => addEvent({event: { name: name, date: dates.start.localDate, venue: _embedded.venues[0].name, id: id }, status: 'going'})} style={{marginRight: \"auto\"}}>I'm going</Button>\n          <Button size=\"small\" disabled={ status ? (status.status === 'interested') : false } onClick={() => addEvent({event: { name: name, date: dates.start.localDate, venue: _embedded.venues[0].name, id: id }, status: 'interested'})}>Interested</Button>\n        </ExpansionPanelActions>\n      </ExpansionPanel>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}