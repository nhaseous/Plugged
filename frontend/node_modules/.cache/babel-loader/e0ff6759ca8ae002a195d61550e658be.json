{"ast":null,"code":"import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER, GET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\nexport var registerUser = function registerUser(user, history) {\n  return function (dispatch) {\n    axios.post('/api/users/register', user).then(function (res) {\n      return history.push('/login');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var loginUser = function loginUser(user) {\n  return function (dispatch) {\n    axios.post('/api/users/login', user).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var ssoUser = function ssoUser(user) {\n  return function (dispatch) {\n    console.log(\"JWT ran\");\n    axios.get('/api/users/ssoauth', user).then(function (res) {\n      var token = res.data.token;\n      localStorage.setItem('jwtToken', token);\n      setAuthToken(token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded));\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n}; // need to fix; currently returns an unresolved promise with value undefined\n\nexport var getMe = function getMe() {\n  return function (dispatch) {\n    axios.get('/api/users/me').then(function (res) {\n      console.log(res.data);\n      return dispatch(getCurrentUser(res.data));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var getFriends = function getFriends() {\n  return function (dispatch) {\n    axios.get('/api/users/me/friends').then(function (res) {\n      console.log(res.data);\n      return dispatch(getCurrentUser(res.data));\n    }).catch(function (err) {\n      return dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};\nexport var getCurrentUser = function getCurrentUser(user) {\n  return {\n    type: GET_CURRENT_USER,\n    payload: user\n  };\n};\nexport var setCurrentUser = function setCurrentUser(decoded) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\nexport var logoutUser = function logoutUser(history) {\n  return function (dispatch) {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n  };\n};\nexport var editUser = function editUser(user, history) {\n  return function (dispatch) {\n    axios.post('/api/users/edit', user).then(function (res) {\n      return history.push('/profile');\n    }).catch(function (err) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/nha/Plugged/frontend/src/actions/authentication.js"],"names":["axios","GET_ERRORS","SET_CURRENT_USER","GET_CURRENT_USER","setAuthToken","jwt_decode","registerUser","user","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","localStorage","setItem","decoded","setCurrentUser","ssoUser","console","log","get","getMe","getCurrentUser","getFriends","logoutUser","removeItem","editUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER, GET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('/api/users/register', user)\n            .then(res => history.push('/login'))\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const loginUser = (user) => dispatch => {\n    axios.post('/api/users/login', user)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n}\n\nexport const ssoUser = (user) => dispatch => {\n    console.log(\"JWT ran\");\n    axios.get('/api/users/ssoauth', user)\n        .then(res => {\n            const { token } = res.data;\n            localStorage.setItem('jwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(setCurrentUser(decoded));\n        })\n        .catch(err => {\n            dispatch({\n                type: GET_ERRORS,\n                payload: err.response.data\n            });\n        });\n};\n\n// need to fix; currently returns an unresolved promise with value undefined\nexport const getMe = () => dispatch => {\n    axios.get('/api/users/me')\n            .then(res => {\n                console.log(res.data);\n                return dispatch(getCurrentUser(res.data));\n            })\n            .catch(err => {\n                return dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const getFriends = () => dispatch => {\n    axios.get('/api/users/me/friends')\n            .then(res => {\n                console.log(res.data);\n                return dispatch(getCurrentUser(res.data));\n            })\n            .catch(err => {\n                return dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const getCurrentUser = user => {\n    return {\n        type: GET_CURRENT_USER,\n        payload: user\n    }\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}\n\n\nexport const editUser = (user, history) => dispatch => {\n  axios.post('/api/users/edit', user)\n          .then(res => history.push('/profile'))\n          .catch(err => {\n              dispatch({\n                  type: GET_ERRORS,\n                  payload: err.response.data\n              });\n          });\n}\n"]},"metadata":{},"sourceType":"module"}