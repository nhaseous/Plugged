{"version":3,"sources":["assets/logo.svg","reducers/errorReducer.js","is-empty.js","reducers/authReducer.js","reducers/index.js","actions/types.js","store.js","setAuthToken.js","actions/authentication.js","components/Navbar.js","components/Register.js","components/Login.js","components/Home.js","components/Profile.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","isEmpty","value","undefined","Object","keys","length","trim","isAuthenticated","user","combineReducers","errors","state","arguments","action","type","payload","auth","objectSpread","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","logoutUser","history","dispatch","localStorage","removeItem","push","logo","require","Navbar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","e","preventDefault","_this$props$auth","authLinks","react_default","a","createElement","className","href","onClick","onLogout","bind","src","avatar","alt","name","title","style","width","marginRight","guestLinks","Link","to","classes","AppBar_default","position","color","appBar","Toolbar_default","Grid_default","container","spacing","alignItems","item","xs","flex","Fragment","inline","Typography_default","variant","noWrap","link","tagline","productLogo","id","Component","connect","withRouter","withStyles","theme","boxShadow","borderBottom","concat","palette","grey","backgroundColor","defineProperty","breakpoints","down","display","justifyContent","textDecoration","borderLeft","marginLeft","paddingLeft","Register","email","password","password_confirm","handleInputChange","assertThisInitialized","handleSubmit","setState","target","registerUser","nextProps","marginTop","marginBottom","onSubmit","placeholder","classnames","is-invalid","onChange","post","then","res","catch","err","response","data","Login","loginUser","setItem","jwt_decode","Home","Profile","jwtToken","currentTime","Date","now","exp","location","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.616dfcc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c9b8e009.svg\";","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n}\nexport default isEmpty;\n","import { SET_CURRENT_USER } from '../actions/types';\nimport isEmpty from '../is-empty';\n\nconst initialState = {\n    isAuthenticated: false,\n    user: {}\n}\n\nexport default function(state = initialState, action ) {\n    switch(action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                isAuthenticated: !isEmpty(action.payload),\n                user: action.payload\n            }\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport errorReducer from './errorReducer';\nimport authReducer from './authReducer';\n\nexport default combineReducers({\n    errors: errorReducer,\n    auth: authReducer\n});\n","export const GET_ERRORS = 'GET_ERRORS';\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst inititalState = {};\nconst store = createStore(\n        rootReducer,\n        inititalState,\n        composeEnhancer(applyMiddleware(thunk)));\n\nexport default store;\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if(token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    }\n    else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n}\n\nexport default setAuthToken;\n","import axios from 'axios';\nimport { GET_ERRORS, SET_CURRENT_USER } from './types';\nimport setAuthToken from '../setAuthToken';\nimport jwt_decode from 'jwt-decode';\n\nexport const registerUser = (user, history) => dispatch => {\n    axios.post('/api/users/register', user)\n            .then(res => history.push('/login'))\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const loginUser = (user) => dispatch => {\n    axios.post('/api/users/login', user)\n            .then(res => {\n                const { token } = res.data;\n                localStorage.setItem('jwtToken', token);\n                setAuthToken(token);\n                const decoded = jwt_decode(token);\n                dispatch(setCurrentUser(decoded));\n            })\n            .catch(err => {\n                dispatch({\n                    type: GET_ERRORS,\n                    payload: err.response.data\n                });\n            });\n}\n\nexport const setCurrentUser = decoded => {\n    return {\n        type: SET_CURRENT_USER,\n        payload: decoded\n    }\n}\n\nexport const logoutUser = (history) => dispatch => {\n    localStorage.removeItem('jwtToken');\n    setAuthToken(false);\n    dispatch(setCurrentUser({}));\n    history.push('/login');\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../actions/authentication';\nimport { withRouter } from 'react-router-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nconst logo = require('../assets/logo.svg');\n\nconst styles = theme => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.grey['100']}`,\n    backgroundColor: 'white',\n\n  },\n  flex: {\n    //display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      display: 'flex',\n      justifyContent: 'space-evenly',\n      alignItems: 'center'\n    }\n  },\n  inline: {\n    display: 'inline'\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit'\n  },\n  productLogo: {\n    display: 'inline-block',\n    borderLeft: `1px solid ${theme.palette.grey['A100']}`,\n    marginLeft: 25,\n    paddingLeft: 25\n  },\n  tagline: {\n    display: 'inline-block',\n    marginLeft: 10\n  },\n})\n\nclass Navbar extends Component {\n    constructor(props){\n        super(props);\n        console.log(this.props);\n    }\n\n    onLogout(e) {\n        e.preventDefault();\n        this.props.logoutUser(this.props.history);\n    }\n\n    render() {\n        const {isAuthenticated, user} = this.props.auth;\n        const authLinks = (\n            <ul className=\"navbar-nav ml-auto\">\n                <a href=\"#\" className=\"nav-link\" onClick={this.onLogout.bind(this)}>\n                    <img src={user.avatar} alt={user.name} title={user.name}\n                        className=\"rounded-circle\"\n                        style={{ width: '25px', marginRight: '5px'}} />\n                            Logout\n                </a>\n            </ul>\n        )\n      const guestLinks = (\n        <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/register\">Sign Up</Link>\n            </li>\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/login\">Sign In</Link>\n            </li>\n        </ul>\n      )\n      const { classes } = this.props;\n        return(\n          <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n            <Toolbar>\n              <Grid container spacing={24} alignItems=\"baseline\">\n                <Grid item xs={12} alignItems='baseline' className={classes.flex}>\n                  <React.Fragment>\n                    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                      <div className={classes.inline}>\n                        <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                          <Link to='/' className={classes.link}>\n                            <img width={20} src={logo} />\n                            <span className={classes.tagline}>Plugged</span>\n                          </Link>\n                        </Typography>\n                      </div>\n                      <div className={classes.productLogo}>\n                        <Typography>\n                          Stay connected\n                        </Typography>\n                      </div>\n                      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                          {isAuthenticated ? authLinks : guestLinks}\n                      </div>\n                    </nav>\n                  </React.Fragment>\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n        )\n    }\n}\nNavbar.propTypes = {\n    logoutUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth\n})\n\nexport default connect(mapStateToProps, { logoutUser })(withRouter(withStyles(styles)(Navbar)));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { registerUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password_confirm: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            name: this.state.name,\n            email: this.state.email,\n            password: this.state.password,\n            password_confirm: this.state.password_confirm\n        }\n        this.props.registerUser(user, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    render() {\n        const { errors } = this.state;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Registration</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.name\n                    })}\n                    name=\"name\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.name }\n                    />\n                    {errors.name && (<div className=\"invalid-feedback\">{errors.name}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password_confirm\n                    })}\n                    name=\"password_confirm\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password_confirm }\n                    />\n                    {errors.password_confirm && (<div className=\"invalid-feedback\">{errors.password_confirm}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Register User\n                    </button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nRegister.propTypes = {\n    registerUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n    auth: state.auth,\n    errors: state.errors\n});\n\nexport default connect(mapStateToProps,{ registerUser })(withRouter(Register))\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../actions/authentication';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            email: '',\n            password: '',\n            errors: {}\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleInputChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const user = {\n            email: this.state.email,\n            password: this.state.password,\n        }\n        this.props.loginUser(user);\n    }\n\n    componentDidMount() {\n        if(this.props.auth.isAuthenticated) {\n            this.props.history.push('/');\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if(nextProps.auth.isAuthenticated) {\n            this.props.history.push('/')\n        }\n        if(nextProps.errors) {\n            this.setState({\n                errors: nextProps.errors\n            });\n        }\n    }\n\n    render() {\n        const {errors} = this.state;\n        return(\n        <div className=\"container\" style={{ marginTop: '50px', width: '700px'}}>\n            <h2 style={{marginBottom: '40px'}}>Login</h2>\n            <form onSubmit={ this.handleSubmit }>\n                <div className=\"form-group\">\n                    <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.email\n                    })}\n                    name=\"email\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.email }\n                    />\n                    {errors.email && (<div className=\"invalid-feedback\">{errors.email}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    className={classnames('form-control form-control-lg', {\n                        'is-invalid': errors.password\n                    })}\n                    name=\"password\"\n                    onChange={ this.handleInputChange }\n                    value={ this.state.password }\n                    />\n                    {errors.password && (<div className=\"invalid-feedback\">{errors.password}</div>)}\n                </div>\n                <div className=\"form-group\">\n                    <button type=\"submit\" className=\"btn btn-primary\">\n                        Login User\n                    </button>\n                </div>\n            </form>\n        </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    loginUser: PropTypes.func.isRequired,\n    auth: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n    auth: state.auth,\n    errors: state.errors\n})\n\nexport  default connect(mapStateToProps, { loginUser })(Login)\n","import React, { Component } from 'react';\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home Component\n            </div>\n        );\n    }\n}\n","\"use strict\";\r\nimport React, {Component} from \"react\";\r\n\r\nexport default class Profile extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>Profile</div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './setAuthToken';\nimport { setCurrentUser, logoutUser } from './actions/authentication';\n\nimport Navbar from './components/Navbar';\nimport Register from './components/Register';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Profile from './components/Profile'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nif(localStorage.jwtToken) {\n  setAuthToken(localStorage.jwtToken);\n  const decoded = jwt_decode(localStorage.jwtToken);\n  store.dispatch(setCurrentUser(decoded));\n\n  const currentTime = Date.now() / 1000;\n  if(decoded.exp < currentTime) {\n    store.dispatch(logoutUser());\n    window.location.href = '/login'\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store = { store }>\n        <Router>\n            <div>\n              <Navbar />\n                <Route exact path=\"/\" component={ Home } />\n                <div className=\"container\">\n                  <Route exact path=\"/register\" component={ Register } />\n                  <Route exact path=\"/login\" component={ Login } />\n                </div>\n                <Route exact path=\"/profile\" component={ Profile } />\n            </div>\n          </Router>\n        </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}